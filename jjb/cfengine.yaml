# This jenkins-job-build configuration sets up Jenkins jobs
# for building Debian packages of cfengine
# NOTE: requires jenkins-job-builder with patch
# https://github.com/linuxmaniac/jenkins-job-builder/commit/3ca77a761fde77c383625d13d531455bdebf3fb8
# (at least until it's included in upstream)

## global defaults
- defaults:
    name: global
    logrotate_keep: &logrotate_keep
     - 20
    distributions: !!python/tuple &distributions
     - squeeze
     - wheezy
     - jessie
     - sid
     - lucid
     - precise
     - trusty
     - utopic
     - vivid
#     - raspwheezy
#     - raspjessie
    architectures: !!python/tuple &architectures
     - amd64
     - i386
     - armel
     - armhf
    slavearchs: !!python/tuple &sarchs
     - x86
     - arm
#    repos: &repos 'http://github.com/ballock/Cfengine-debian'
    repo: cfengine
    reftag: &reftag '+refs/tags/*:refs/remotes/origin/tags/*'
    refbranch: &refbranch '+refs/heads/*:refs/remotes/origin/*'
    multitar_source: ''
    branch: &branch 'master'
    browser: &github githubweb
    browser-url: &browserurl 'https://github.com/ballock/Cfengine-debian'
    jobs: &jobs
      - '{name}-source'
      - '{name}-binaries'
      - '{name}-repos'
      - '{name}-piuparts'
    email: &recipients 'boleslaw.tokarski@gmail.com'

## list of projects with their configurations
# build based on branches
- scm:
    name: cfengine3-repos
    scm:
      - git:
          url: 'http://github.com/cfengine-pkg/cfengine3'
          name: origin
          basedir: source
          refspec: *reftag
          branches:
            - origin/tags/debian/3.6.5-0.1
          wipe-workspace: false
          browser: *github
          browser-url: *browserurl

- project:
    name: cfengine3
    logrotate_keep: *logrotate_keep
    scm-name: 
      - 'regular'
    distributions: *distributions
    architectures: *architectures
    jobs: *jobs
    basetag: 'debian/3.6.5-0.1'
    multitar_source: 'masterfiles'

- scm:
    name: cfe-upstream
    scm:
      - git:
         url: 'https://github.com/cfengine/core'
         branches:
          - 'origin/master'
         basedir: source
         wipe-workspace: false

- scm:
    name: cfe-debianization
    scm:
      - git:
         url: 'https://github.com/ballock/Cfengine-debian'
         branches:
          - 'origin/debianization'
         basedir: source/debian

- scm:
    name: cfengine3-daily-repos
    scm:
     - cfe-upstream 
     - cfe-debianization

- project:
    name: cfengine3-daily
    logrotate_keep: *logrotate_keep
    scm-name: 
      - cfe-upstream-debianization
    refspec: *refbranch
    branch: *branch
    browser: *github
    browser-url: *browserurl
    distributions: *distributions
    architectures: *architectures
    jobs: *jobs
    basetag: '3.6.1'

#- scm:
#    name: openssl-repos
#    scm:
#      - git:
#          url: 'http://github.com/ballock/openssl-deb'
#          name: origin
#          basedir: source
#          refspec: *refbranch
#          branches:
#            - *branch
#          wipe-workspace: false
#          browser: *github
#          browser-url: 'https://github.com/ballock/openssl-deb'
#
#- project:
#    name: openssl
#    logrotate_keep: *logrotate_keep
#    distributions: !!python/tuple [squeeze, wheezy, lucid, precise]
#    architectures: *architectures
#    jobs: *jobs
#    basetag: '3.6.1'
#
- scm:
    name: lmdb-repos
    scm:
      - git:
          url: 'http://github.com/ballock/lmdb-deb'
          name: origin
          basedir: source
          refspec: *reftag
          branches:
            - origin/tags/debian/0.9.10-1
          wipe-workspace: false
          browser: *github
          browser-url: 'https://github.com/ballock/lmdb-deb'

- project:
    name: lmdb
    logrotate_keep: *logrotate_keep
    distributions: !!python/tuple [squeeze, wheezy, lucid, precise, raspwheezy]
#    distributions: !!python/tuple [squeeze, wheezy, lucid, precise]
    architectures: *architectures
    jobs: *jobs
    basetag: '3.6.1'

# open-vcdiff
- scm:
    name: openvcdiff-repos
    scm:
      - git:
          url: https://github.com/ballock/open-vcdiff
          name: origin
          basedir: source
          refspec: *reftag
          branches:
            - origin/tags/debian/0.8.4-1.1
          wipe-workspace: false
          browser: *github
          browser-url: https://github.com/ballock/open-vcdiff

- project:
    name: openvcdiff
    logrotate_keep: *logrotate_keep
    scm-name: 
      - open-vcdiff-repos
    distributions: !!python/tuple
     - squeeze
 #    - jessie
 #    - precise
 #    - trusty
 #    - utopic
    architectures: !!python/tuple
     - amd64
     - i386
#     - armel
#     - armhf
    jobs: *jobs
    basetag: '0.8.4-1.1'


#- project:
#    name: libsodium
#    logrotate_keep: *logrotate_keep
#    scm-name: 
#      - 'regular'
#    distributions: !!python/tuple
#     - squeeze
#     - wheezy
#     - lucid
#     - precise
#     - trusty
#     - utopic
#    architectures: !!python/tuple
#     - amd64
#     - i386
#     - armel
#     - armhf
#    jobs: *jobs
#    basetag: '1.0.0'


## the job template
- job-template:
      name: '{name}-source'
      project-type: matrix
      description: |
        Build Debian source package of {name}.
        <!-- Do NOT edit this job through the web, it is generated via jenkins-job-builder! -->
      scm: 
        - '{name}-repos'
      execution-strategy:
        sequential: true
      axes:
        - axis:
            type: user-defined
            name: distribution
            values: '{obj:distributions}'
        - axis:
            type: slave
            name: label
            values:
              - master
      logrotate:
        numToKeep: '{logrotate_keep}'
      disabled: false
      triggers:
        - pollscm: '@midnight'

      builders:
        - shell: 'rm -f ./* || true'
        - shell: 'MULTITAR_SOURCE={multitar_source} /home/admin/cfengine-deb-jenkins/scripts/jdg-generate-source'
        - shell: |
            mkdir -p report
            /usr/bin/lintian-junit-report *.dsc > report/lintian.xml
      publishers:
        - archive:
            artifacts: '*.gz,*.bz2,*.xz,*.deb,*.udeb,*.dsc,*.changes,lintian.txt'
        - trigger:
            project: '{name}-binaries'
            threshold: UNSTABLE
        - junit:
            results: '**/lintian.xml'
            keep-long-stdio: false
        - fingerprint:
            record-artifacts: true
        - email:
            recipients: *recipients
      wrappers:
        - timestamps

- job-template:
      name: '{name}-binaries'
      project-type: matrix
      description: |
        Build Debian/Ubuntu binary packages of {name}.
        <!-- Do NOT edit this job through the web, it is generated via jenkins-job-builder! -->
      logrotate:
        numToKeep: '{logrotate_keep}'
      execution-strategy:
        sequential: false
        combination-filter: '(architecture=="amd64" || architecture=="i386").implies(label=="x86") && (architecture=="armel" || architecture=="armhf").implies(label=="arm") && (distribution=="raspwheezy" || distribution=="raspjessie").implies(architecture=="armhf") && ((distribution=="lucid" || distribution=="squeeze") && label=="arm").implies(architecture=="armel") && ((distribution=="trusty" || distribution=="utopic") && label=="arm").implies(architecture=="armhf")'
      axes:
        - axis:
            type: user-defined
            name: architecture
            values: '{obj:architectures}'
        - axis:
            type: user-defined
            name: distribution
            values: '{obj:distributions}'
        - axis:
            type: slave
            name: label
            values: *sarchs
      builders:
        - shell: |
           echo "* Removing files workspace before copying artifacts from another project. *"
           rm -f ./* || true
        - copyartifact:
            project: '{name}-source/distribution=$distribution,label=master'
            filter: '*'
            which-build: upstream-build
            fallback-to-last-successful: true
        - shell: "SUBREPO={repo} /home/admin/cfengine-deb-jenkins/scripts/jdg-build-package"
        - shell: |
            mkdir -p report
            /usr/bin/lintian-junit-report *.changes > report/lintian.xml
        - shell: |
            mkdir -p report adt
            touch adt/summary # do not fail if no autopkgtest run took place
            /usr/bin/adtsummary_tap adt/summary > report/autopkgtest.tap
      publishers:
        - archive:
            artifacts: '**/*.gz,**/*.bz2,**/*.xz,**/*.deb,**/*.udeb,**/*.dsc,**/*.changes,**/lintian.txt'
        - tap:
            results: 'report/*.tap'
        - junit:
            results: '**/lintian.xml'
            keep-long-stdio: false
        - fingerprint:
            record-artifacts: true
        - trigger:
            project: '{name}-repos'
            threshold: UNSTABLE
#        - trigger:
#            project: '{name}-piuparts'
#            threshold: UNSTABLE
        - workspace-cleanup:
            dirmatch: false
        - email:
            recipients: *recipients
      wrappers:
        - timestamps

- job-template:
      name: '{name}-repos'
      project-type: matrix
      description: |
        Repository handling for Debian packages of {name}.
        <!-- Do NOT edit this job through the web, it is generated via jenkins-job-builder! -->
      logrotate:
        numToKeep: '{logrotate_keep}'
      execution-strategy:
        sequential: true
        combination-filter: '(architecture=="amd64" || architecture=="i386").implies(fromslave=="x86") && (architecture=="armel" || architecture=="armhf").implies(fromslave=="arm") && (distribution=="raspwheezy" || distribution=="raspjessie").implies(architecture=="armhf") && ((distribution=="lucid" || distribution=="squeeze") && fromslave=="arm").implies(architecture=="armel") && ((distribution=="trusty" || distribution=="utopic") && fromslave=="arm").implies(architecture=="armhf")'
      axes:
        - axis:
            type: user-defined
            name: architecture
            values: '{obj:architectures}'
        - axis:
            type: user-defined
            name: distribution
            values: '{obj:distributions}'
        - axis:
            type: user-defined
            name: fromslave
            values: *sarchs 
        - axis:
            type: slave
            name: label
            values:
              - master
      builders:
        - shell: |
           echo "* Removing files workspace before copying artifacts from another project. *"
           rm -f ./* || true
        - copyartifact:
            project: '{name}-binaries/architecture=$architecture,distribution=$distribution,label=$fromslave'
            filter: '*'
            which-build: upstream-build
            fallback-to-last-successful: true
            target: 'binaries/'
        - shell: "SUBREPO={repo} /home/admin/cfengine-deb-jenkins/scripts/jdg-repository"
      publishers:
        - archive:
            artifacts: '**/*.gz,**/*.bz2,**/*.xz,**/*.deb,**/*.udeb,**/*.dsc,**/*.changes'
        - fingerprint:
            record-artifacts: true
        - workspace-cleanup:
            dirmatch: false
        - email:
            recipients: *recipients
      wrappers:
        - timestamps

- job-template:
      name: '{name}-piuparts'
      project-type: matrix
      description: |
        Installation and upgrade tests for {name} Debian packages.
        <!-- Do NOT edit this job through the web, it is generated via jenkins-job-builder! -->
      disabled: false
      logrotate:
        numToKeep: '{logrotate_keep}'
      execution-strategy:
        sequential: true
        combination-filter: '(architecture=="amd64" || architecture=="i386").implies(fromslave=="x86") && (architecture=="armel" || architecture=="armhf").implies(fromslave=="arm")'
      axes:
        - axis:
            type: user-defined
            name: architecture
            values: '{obj:architectures}'
        - axis:
            type: user-defined
            name: distribution
            values: '{obj:distributions}'
        - axis:
            type: user-defined
            name: fromslave
            values: *sarchs 
        - axis:
            type: slave
            name: label
            values: *sarchs
      builders:
        - shell: |
           echo "* Removing files workspace before copying artifacts from another project. *"
           rm -f ./* || true
        - copyartifact:
            project: '{name}-binaries/architecture=$architecture,distribution=$distribution,label=$fromslave'
            filter: '*.deb'
            which-build: upstream-build
            fallback-to-last-successful: true
            flatten: true
            target: 'artifacts/'
        - shell: "/home/admin/cfengine-deb-jenkins/scripts/jdg-piuparts"
      publishers:
        - tap:
            results: 'piuparts.tap'
        - archive:
            artifacts: 'piuparts.*'
        - fingerprint:
            record-artifacts: true
        - workspace-cleanup:
            dirmatch: false
        - email:
            recipients: *recipients
      wrappers:
        - timestamps

